package com.ocko.aventador.dao.model.aventador;

import java.math.BigDecimal;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class ViewInfiniteIncomeExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table aventador.view_infinite_income
     *
     * @mbg.generated Wed Apr 13 14:25:10 KST 2022
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table aventador.view_infinite_income
     *
     * @mbg.generated Wed Apr 13 14:25:10 KST 2022
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table aventador.view_infinite_income
     *
     * @mbg.generated Wed Apr 13 14:25:10 KST 2022
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table {0}
     *
     * @mbggenerated
     */
    private Integer limit;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table {0}
     *
     * @mbggenerated
     */
    private Integer offset;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table aventador.view_infinite_income
     *
     * @mbg.generated Wed Apr 13 14:25:10 KST 2022
     */
    public ViewInfiniteIncomeExample() {
        oredCriteria = new ArrayList<>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table aventador.view_infinite_income
     *
     * @mbg.generated Wed Apr 13 14:25:10 KST 2022
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table aventador.view_infinite_income
     *
     * @mbg.generated Wed Apr 13 14:25:10 KST 2022
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table aventador.view_infinite_income
     *
     * @mbg.generated Wed Apr 13 14:25:10 KST 2022
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table aventador.view_infinite_income
     *
     * @mbg.generated Wed Apr 13 14:25:10 KST 2022
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table aventador.view_infinite_income
     *
     * @mbg.generated Wed Apr 13 14:25:10 KST 2022
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table aventador.view_infinite_income
     *
     * @mbg.generated Wed Apr 13 14:25:10 KST 2022
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table aventador.view_infinite_income
     *
     * @mbg.generated Wed Apr 13 14:25:10 KST 2022
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table aventador.view_infinite_income
     *
     * @mbg.generated Wed Apr 13 14:25:10 KST 2022
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table aventador.view_infinite_income
     *
     * @mbg.generated Wed Apr 13 14:25:10 KST 2022
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table aventador.view_infinite_income
     *
     * @mbg.generated Wed Apr 13 14:25:10 KST 2022
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table {0}
     *
     * @mbggenerated
     */
    public void setLimit(Integer limit) {
        this.limit = limit;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table {0}
     *
     * @mbggenerated
     */
    public Integer getLimit() {
        return limit;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table {0}
     *
     * @mbggenerated
     */
    public void setOffset(Integer offset) {
        this.offset = offset;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table {0}
     *
     * @mbggenerated
     */
    public Integer getOffset() {
        return offset;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table aventador.view_infinite_income
     *
     * @mbg.generated Wed Apr 13 14:25:10 KST 2022
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andMemberIdIsNull() {
            addCriterion("member_id is null");
            return (Criteria) this;
        }

        public Criteria andMemberIdIsNotNull() {
            addCriterion("member_id is not null");
            return (Criteria) this;
        }

        public Criteria andMemberIdEqualTo(Integer value) {
            addCriterion("member_id =", value, "memberId");
            return (Criteria) this;
        }

        public Criteria andMemberIdNotEqualTo(Integer value) {
            addCriterion("member_id <>", value, "memberId");
            return (Criteria) this;
        }

        public Criteria andMemberIdGreaterThan(Integer value) {
            addCriterion("member_id >", value, "memberId");
            return (Criteria) this;
        }

        public Criteria andMemberIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("member_id >=", value, "memberId");
            return (Criteria) this;
        }

        public Criteria andMemberIdLessThan(Integer value) {
            addCriterion("member_id <", value, "memberId");
            return (Criteria) this;
        }

        public Criteria andMemberIdLessThanOrEqualTo(Integer value) {
            addCriterion("member_id <=", value, "memberId");
            return (Criteria) this;
        }

        public Criteria andMemberIdIn(List<Integer> values) {
            addCriterion("member_id in", values, "memberId");
            return (Criteria) this;
        }

        public Criteria andMemberIdNotIn(List<Integer> values) {
            addCriterion("member_id not in", values, "memberId");
            return (Criteria) this;
        }

        public Criteria andMemberIdBetween(Integer value1, Integer value2) {
            addCriterion("member_id between", value1, value2, "memberId");
            return (Criteria) this;
        }

        public Criteria andMemberIdNotBetween(Integer value1, Integer value2) {
            addCriterion("member_id not between", value1, value2, "memberId");
            return (Criteria) this;
        }

        public Criteria andSymbolIsNull() {
            addCriterion("symbol is null");
            return (Criteria) this;
        }

        public Criteria andSymbolIsNotNull() {
            addCriterion("symbol is not null");
            return (Criteria) this;
        }

        public Criteria andSymbolEqualTo(String value) {
            addCriterion("symbol =", value, "symbol");
            return (Criteria) this;
        }

        public Criteria andSymbolNotEqualTo(String value) {
            addCriterion("symbol <>", value, "symbol");
            return (Criteria) this;
        }

        public Criteria andSymbolGreaterThan(String value) {
            addCriterion("symbol >", value, "symbol");
            return (Criteria) this;
        }

        public Criteria andSymbolGreaterThanOrEqualTo(String value) {
            addCriterion("symbol >=", value, "symbol");
            return (Criteria) this;
        }

        public Criteria andSymbolLessThan(String value) {
            addCriterion("symbol <", value, "symbol");
            return (Criteria) this;
        }

        public Criteria andSymbolLessThanOrEqualTo(String value) {
            addCriterion("symbol <=", value, "symbol");
            return (Criteria) this;
        }

        public Criteria andSymbolLike(String value) {
            addCriterion("symbol like", value, "symbol");
            return (Criteria) this;
        }

        public Criteria andSymbolNotLike(String value) {
            addCriterion("symbol not like", value, "symbol");
            return (Criteria) this;
        }

        public Criteria andSymbolIn(List<String> values) {
            addCriterion("symbol in", values, "symbol");
            return (Criteria) this;
        }

        public Criteria andSymbolNotIn(List<String> values) {
            addCriterion("symbol not in", values, "symbol");
            return (Criteria) this;
        }

        public Criteria andSymbolBetween(String value1, String value2) {
            addCriterion("symbol between", value1, value2, "symbol");
            return (Criteria) this;
        }

        public Criteria andSymbolNotBetween(String value1, String value2) {
            addCriterion("symbol not between", value1, value2, "symbol");
            return (Criteria) this;
        }

        public Criteria andStartedDateIsNull() {
            addCriterion("started_date is null");
            return (Criteria) this;
        }

        public Criteria andStartedDateIsNotNull() {
            addCriterion("started_date is not null");
            return (Criteria) this;
        }

        public Criteria andStartedDateEqualTo(LocalDate value) {
            addCriterion("started_date =", value, "startedDate");
            return (Criteria) this;
        }

        public Criteria andStartedDateNotEqualTo(LocalDate value) {
            addCriterion("started_date <>", value, "startedDate");
            return (Criteria) this;
        }

        public Criteria andStartedDateGreaterThan(LocalDate value) {
            addCriterion("started_date >", value, "startedDate");
            return (Criteria) this;
        }

        public Criteria andStartedDateGreaterThanOrEqualTo(LocalDate value) {
            addCriterion("started_date >=", value, "startedDate");
            return (Criteria) this;
        }

        public Criteria andStartedDateLessThan(LocalDate value) {
            addCriterion("started_date <", value, "startedDate");
            return (Criteria) this;
        }

        public Criteria andStartedDateLessThanOrEqualTo(LocalDate value) {
            addCriterion("started_date <=", value, "startedDate");
            return (Criteria) this;
        }

        public Criteria andStartedDateIn(List<LocalDate> values) {
            addCriterion("started_date in", values, "startedDate");
            return (Criteria) this;
        }

        public Criteria andStartedDateNotIn(List<LocalDate> values) {
            addCriterion("started_date not in", values, "startedDate");
            return (Criteria) this;
        }

        public Criteria andStartedDateBetween(LocalDate value1, LocalDate value2) {
            addCriterion("started_date between", value1, value2, "startedDate");
            return (Criteria) this;
        }

        public Criteria andStartedDateNotBetween(LocalDate value1, LocalDate value2) {
            addCriterion("started_date not between", value1, value2, "startedDate");
            return (Criteria) this;
        }

        public Criteria andSeedIsNull() {
            addCriterion("seed is null");
            return (Criteria) this;
        }

        public Criteria andSeedIsNotNull() {
            addCriterion("seed is not null");
            return (Criteria) this;
        }

        public Criteria andSeedEqualTo(BigDecimal value) {
            addCriterion("seed =", value, "seed");
            return (Criteria) this;
        }

        public Criteria andSeedNotEqualTo(BigDecimal value) {
            addCriterion("seed <>", value, "seed");
            return (Criteria) this;
        }

        public Criteria andSeedGreaterThan(BigDecimal value) {
            addCriterion("seed >", value, "seed");
            return (Criteria) this;
        }

        public Criteria andSeedGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("seed >=", value, "seed");
            return (Criteria) this;
        }

        public Criteria andSeedLessThan(BigDecimal value) {
            addCriterion("seed <", value, "seed");
            return (Criteria) this;
        }

        public Criteria andSeedLessThanOrEqualTo(BigDecimal value) {
            addCriterion("seed <=", value, "seed");
            return (Criteria) this;
        }

        public Criteria andSeedIn(List<BigDecimal> values) {
            addCriterion("seed in", values, "seed");
            return (Criteria) this;
        }

        public Criteria andSeedNotIn(List<BigDecimal> values) {
            addCriterion("seed not in", values, "seed");
            return (Criteria) this;
        }

        public Criteria andSeedBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("seed between", value1, value2, "seed");
            return (Criteria) this;
        }

        public Criteria andSeedNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("seed not between", value1, value2, "seed");
            return (Criteria) this;
        }

        public Criteria andIncomeIdIsNull() {
            addCriterion("income_id is null");
            return (Criteria) this;
        }

        public Criteria andIncomeIdIsNotNull() {
            addCriterion("income_id is not null");
            return (Criteria) this;
        }

        public Criteria andIncomeIdEqualTo(Integer value) {
            addCriterion("income_id =", value, "incomeId");
            return (Criteria) this;
        }

        public Criteria andIncomeIdNotEqualTo(Integer value) {
            addCriterion("income_id <>", value, "incomeId");
            return (Criteria) this;
        }

        public Criteria andIncomeIdGreaterThan(Integer value) {
            addCriterion("income_id >", value, "incomeId");
            return (Criteria) this;
        }

        public Criteria andIncomeIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("income_id >=", value, "incomeId");
            return (Criteria) this;
        }

        public Criteria andIncomeIdLessThan(Integer value) {
            addCriterion("income_id <", value, "incomeId");
            return (Criteria) this;
        }

        public Criteria andIncomeIdLessThanOrEqualTo(Integer value) {
            addCriterion("income_id <=", value, "incomeId");
            return (Criteria) this;
        }

        public Criteria andIncomeIdIn(List<Integer> values) {
            addCriterion("income_id in", values, "incomeId");
            return (Criteria) this;
        }

        public Criteria andIncomeIdNotIn(List<Integer> values) {
            addCriterion("income_id not in", values, "incomeId");
            return (Criteria) this;
        }

        public Criteria andIncomeIdBetween(Integer value1, Integer value2) {
            addCriterion("income_id between", value1, value2, "incomeId");
            return (Criteria) this;
        }

        public Criteria andIncomeIdNotBetween(Integer value1, Integer value2) {
            addCriterion("income_id not between", value1, value2, "incomeId");
            return (Criteria) this;
        }

        public Criteria andAccountIdIsNull() {
            addCriterion("account_id is null");
            return (Criteria) this;
        }

        public Criteria andAccountIdIsNotNull() {
            addCriterion("account_id is not null");
            return (Criteria) this;
        }

        public Criteria andAccountIdEqualTo(Integer value) {
            addCriterion("account_id =", value, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdNotEqualTo(Integer value) {
            addCriterion("account_id <>", value, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdGreaterThan(Integer value) {
            addCriterion("account_id >", value, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("account_id >=", value, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdLessThan(Integer value) {
            addCriterion("account_id <", value, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdLessThanOrEqualTo(Integer value) {
            addCriterion("account_id <=", value, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdIn(List<Integer> values) {
            addCriterion("account_id in", values, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdNotIn(List<Integer> values) {
            addCriterion("account_id not in", values, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdBetween(Integer value1, Integer value2) {
            addCriterion("account_id between", value1, value2, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdNotBetween(Integer value1, Integer value2) {
            addCriterion("account_id not between", value1, value2, "accountId");
            return (Criteria) this;
        }

        public Criteria andInfiniteIdIsNull() {
            addCriterion("infinite_id is null");
            return (Criteria) this;
        }

        public Criteria andInfiniteIdIsNotNull() {
            addCriterion("infinite_id is not null");
            return (Criteria) this;
        }

        public Criteria andInfiniteIdEqualTo(Integer value) {
            addCriterion("infinite_id =", value, "infiniteId");
            return (Criteria) this;
        }

        public Criteria andInfiniteIdNotEqualTo(Integer value) {
            addCriterion("infinite_id <>", value, "infiniteId");
            return (Criteria) this;
        }

        public Criteria andInfiniteIdGreaterThan(Integer value) {
            addCriterion("infinite_id >", value, "infiniteId");
            return (Criteria) this;
        }

        public Criteria andInfiniteIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("infinite_id >=", value, "infiniteId");
            return (Criteria) this;
        }

        public Criteria andInfiniteIdLessThan(Integer value) {
            addCriterion("infinite_id <", value, "infiniteId");
            return (Criteria) this;
        }

        public Criteria andInfiniteIdLessThanOrEqualTo(Integer value) {
            addCriterion("infinite_id <=", value, "infiniteId");
            return (Criteria) this;
        }

        public Criteria andInfiniteIdIn(List<Integer> values) {
            addCriterion("infinite_id in", values, "infiniteId");
            return (Criteria) this;
        }

        public Criteria andInfiniteIdNotIn(List<Integer> values) {
            addCriterion("infinite_id not in", values, "infiniteId");
            return (Criteria) this;
        }

        public Criteria andInfiniteIdBetween(Integer value1, Integer value2) {
            addCriterion("infinite_id between", value1, value2, "infiniteId");
            return (Criteria) this;
        }

        public Criteria andInfiniteIdNotBetween(Integer value1, Integer value2) {
            addCriterion("infinite_id not between", value1, value2, "infiniteId");
            return (Criteria) this;
        }

        public Criteria andInfiniteHistoryIdIsNull() {
            addCriterion("infinite_history_id is null");
            return (Criteria) this;
        }

        public Criteria andInfiniteHistoryIdIsNotNull() {
            addCriterion("infinite_history_id is not null");
            return (Criteria) this;
        }

        public Criteria andInfiniteHistoryIdEqualTo(Integer value) {
            addCriterion("infinite_history_id =", value, "infiniteHistoryId");
            return (Criteria) this;
        }

        public Criteria andInfiniteHistoryIdNotEqualTo(Integer value) {
            addCriterion("infinite_history_id <>", value, "infiniteHistoryId");
            return (Criteria) this;
        }

        public Criteria andInfiniteHistoryIdGreaterThan(Integer value) {
            addCriterion("infinite_history_id >", value, "infiniteHistoryId");
            return (Criteria) this;
        }

        public Criteria andInfiniteHistoryIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("infinite_history_id >=", value, "infiniteHistoryId");
            return (Criteria) this;
        }

        public Criteria andInfiniteHistoryIdLessThan(Integer value) {
            addCriterion("infinite_history_id <", value, "infiniteHistoryId");
            return (Criteria) this;
        }

        public Criteria andInfiniteHistoryIdLessThanOrEqualTo(Integer value) {
            addCriterion("infinite_history_id <=", value, "infiniteHistoryId");
            return (Criteria) this;
        }

        public Criteria andInfiniteHistoryIdIn(List<Integer> values) {
            addCriterion("infinite_history_id in", values, "infiniteHistoryId");
            return (Criteria) this;
        }

        public Criteria andInfiniteHistoryIdNotIn(List<Integer> values) {
            addCriterion("infinite_history_id not in", values, "infiniteHistoryId");
            return (Criteria) this;
        }

        public Criteria andInfiniteHistoryIdBetween(Integer value1, Integer value2) {
            addCriterion("infinite_history_id between", value1, value2, "infiniteHistoryId");
            return (Criteria) this;
        }

        public Criteria andInfiniteHistoryIdNotBetween(Integer value1, Integer value2) {
            addCriterion("infinite_history_id not between", value1, value2, "infiniteHistoryId");
            return (Criteria) this;
        }

        public Criteria andSellDateIsNull() {
            addCriterion("sell_date is null");
            return (Criteria) this;
        }

        public Criteria andSellDateIsNotNull() {
            addCriterion("sell_date is not null");
            return (Criteria) this;
        }

        public Criteria andSellDateEqualTo(LocalDate value) {
            addCriterion("sell_date =", value, "sellDate");
            return (Criteria) this;
        }

        public Criteria andSellDateNotEqualTo(LocalDate value) {
            addCriterion("sell_date <>", value, "sellDate");
            return (Criteria) this;
        }

        public Criteria andSellDateGreaterThan(LocalDate value) {
            addCriterion("sell_date >", value, "sellDate");
            return (Criteria) this;
        }

        public Criteria andSellDateGreaterThanOrEqualTo(LocalDate value) {
            addCriterion("sell_date >=", value, "sellDate");
            return (Criteria) this;
        }

        public Criteria andSellDateLessThan(LocalDate value) {
            addCriterion("sell_date <", value, "sellDate");
            return (Criteria) this;
        }

        public Criteria andSellDateLessThanOrEqualTo(LocalDate value) {
            addCriterion("sell_date <=", value, "sellDate");
            return (Criteria) this;
        }

        public Criteria andSellDateIn(List<LocalDate> values) {
            addCriterion("sell_date in", values, "sellDate");
            return (Criteria) this;
        }

        public Criteria andSellDateNotIn(List<LocalDate> values) {
            addCriterion("sell_date not in", values, "sellDate");
            return (Criteria) this;
        }

        public Criteria andSellDateBetween(LocalDate value1, LocalDate value2) {
            addCriterion("sell_date between", value1, value2, "sellDate");
            return (Criteria) this;
        }

        public Criteria andSellDateNotBetween(LocalDate value1, LocalDate value2) {
            addCriterion("sell_date not between", value1, value2, "sellDate");
            return (Criteria) this;
        }

        public Criteria andProgressPerIsNull() {
            addCriterion("progress_per is null");
            return (Criteria) this;
        }

        public Criteria andProgressPerIsNotNull() {
            addCriterion("progress_per is not null");
            return (Criteria) this;
        }

        public Criteria andProgressPerEqualTo(BigDecimal value) {
            addCriterion("progress_per =", value, "progressPer");
            return (Criteria) this;
        }

        public Criteria andProgressPerNotEqualTo(BigDecimal value) {
            addCriterion("progress_per <>", value, "progressPer");
            return (Criteria) this;
        }

        public Criteria andProgressPerGreaterThan(BigDecimal value) {
            addCriterion("progress_per >", value, "progressPer");
            return (Criteria) this;
        }

        public Criteria andProgressPerGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("progress_per >=", value, "progressPer");
            return (Criteria) this;
        }

        public Criteria andProgressPerLessThan(BigDecimal value) {
            addCriterion("progress_per <", value, "progressPer");
            return (Criteria) this;
        }

        public Criteria andProgressPerLessThanOrEqualTo(BigDecimal value) {
            addCriterion("progress_per <=", value, "progressPer");
            return (Criteria) this;
        }

        public Criteria andProgressPerIn(List<BigDecimal> values) {
            addCriterion("progress_per in", values, "progressPer");
            return (Criteria) this;
        }

        public Criteria andProgressPerNotIn(List<BigDecimal> values) {
            addCriterion("progress_per not in", values, "progressPer");
            return (Criteria) this;
        }

        public Criteria andProgressPerBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("progress_per between", value1, value2, "progressPer");
            return (Criteria) this;
        }

        public Criteria andProgressPerNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("progress_per not between", value1, value2, "progressPer");
            return (Criteria) this;
        }

        public Criteria andAveragePriceIsNull() {
            addCriterion("average_price is null");
            return (Criteria) this;
        }

        public Criteria andAveragePriceIsNotNull() {
            addCriterion("average_price is not null");
            return (Criteria) this;
        }

        public Criteria andAveragePriceEqualTo(BigDecimal value) {
            addCriterion("average_price =", value, "averagePrice");
            return (Criteria) this;
        }

        public Criteria andAveragePriceNotEqualTo(BigDecimal value) {
            addCriterion("average_price <>", value, "averagePrice");
            return (Criteria) this;
        }

        public Criteria andAveragePriceGreaterThan(BigDecimal value) {
            addCriterion("average_price >", value, "averagePrice");
            return (Criteria) this;
        }

        public Criteria andAveragePriceGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("average_price >=", value, "averagePrice");
            return (Criteria) this;
        }

        public Criteria andAveragePriceLessThan(BigDecimal value) {
            addCriterion("average_price <", value, "averagePrice");
            return (Criteria) this;
        }

        public Criteria andAveragePriceLessThanOrEqualTo(BigDecimal value) {
            addCriterion("average_price <=", value, "averagePrice");
            return (Criteria) this;
        }

        public Criteria andAveragePriceIn(List<BigDecimal> values) {
            addCriterion("average_price in", values, "averagePrice");
            return (Criteria) this;
        }

        public Criteria andAveragePriceNotIn(List<BigDecimal> values) {
            addCriterion("average_price not in", values, "averagePrice");
            return (Criteria) this;
        }

        public Criteria andAveragePriceBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("average_price between", value1, value2, "averagePrice");
            return (Criteria) this;
        }

        public Criteria andAveragePriceNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("average_price not between", value1, value2, "averagePrice");
            return (Criteria) this;
        }

        public Criteria andBuyPriceIsNull() {
            addCriterion("buy_price is null");
            return (Criteria) this;
        }

        public Criteria andBuyPriceIsNotNull() {
            addCriterion("buy_price is not null");
            return (Criteria) this;
        }

        public Criteria andBuyPriceEqualTo(BigDecimal value) {
            addCriterion("buy_price =", value, "buyPrice");
            return (Criteria) this;
        }

        public Criteria andBuyPriceNotEqualTo(BigDecimal value) {
            addCriterion("buy_price <>", value, "buyPrice");
            return (Criteria) this;
        }

        public Criteria andBuyPriceGreaterThan(BigDecimal value) {
            addCriterion("buy_price >", value, "buyPrice");
            return (Criteria) this;
        }

        public Criteria andBuyPriceGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("buy_price >=", value, "buyPrice");
            return (Criteria) this;
        }

        public Criteria andBuyPriceLessThan(BigDecimal value) {
            addCriterion("buy_price <", value, "buyPrice");
            return (Criteria) this;
        }

        public Criteria andBuyPriceLessThanOrEqualTo(BigDecimal value) {
            addCriterion("buy_price <=", value, "buyPrice");
            return (Criteria) this;
        }

        public Criteria andBuyPriceIn(List<BigDecimal> values) {
            addCriterion("buy_price in", values, "buyPrice");
            return (Criteria) this;
        }

        public Criteria andBuyPriceNotIn(List<BigDecimal> values) {
            addCriterion("buy_price not in", values, "buyPrice");
            return (Criteria) this;
        }

        public Criteria andBuyPriceBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("buy_price between", value1, value2, "buyPrice");
            return (Criteria) this;
        }

        public Criteria andBuyPriceNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("buy_price not between", value1, value2, "buyPrice");
            return (Criteria) this;
        }

        public Criteria andSellPriceIsNull() {
            addCriterion("sell_price is null");
            return (Criteria) this;
        }

        public Criteria andSellPriceIsNotNull() {
            addCriterion("sell_price is not null");
            return (Criteria) this;
        }

        public Criteria andSellPriceEqualTo(BigDecimal value) {
            addCriterion("sell_price =", value, "sellPrice");
            return (Criteria) this;
        }

        public Criteria andSellPriceNotEqualTo(BigDecimal value) {
            addCriterion("sell_price <>", value, "sellPrice");
            return (Criteria) this;
        }

        public Criteria andSellPriceGreaterThan(BigDecimal value) {
            addCriterion("sell_price >", value, "sellPrice");
            return (Criteria) this;
        }

        public Criteria andSellPriceGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("sell_price >=", value, "sellPrice");
            return (Criteria) this;
        }

        public Criteria andSellPriceLessThan(BigDecimal value) {
            addCriterion("sell_price <", value, "sellPrice");
            return (Criteria) this;
        }

        public Criteria andSellPriceLessThanOrEqualTo(BigDecimal value) {
            addCriterion("sell_price <=", value, "sellPrice");
            return (Criteria) this;
        }

        public Criteria andSellPriceIn(List<BigDecimal> values) {
            addCriterion("sell_price in", values, "sellPrice");
            return (Criteria) this;
        }

        public Criteria andSellPriceNotIn(List<BigDecimal> values) {
            addCriterion("sell_price not in", values, "sellPrice");
            return (Criteria) this;
        }

        public Criteria andSellPriceBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("sell_price between", value1, value2, "sellPrice");
            return (Criteria) this;
        }

        public Criteria andSellPriceNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("sell_price not between", value1, value2, "sellPrice");
            return (Criteria) this;
        }

        public Criteria andIncomeIsNull() {
            addCriterion("income is null");
            return (Criteria) this;
        }

        public Criteria andIncomeIsNotNull() {
            addCriterion("income is not null");
            return (Criteria) this;
        }

        public Criteria andIncomeEqualTo(BigDecimal value) {
            addCriterion("income =", value, "income");
            return (Criteria) this;
        }

        public Criteria andIncomeNotEqualTo(BigDecimal value) {
            addCriterion("income <>", value, "income");
            return (Criteria) this;
        }

        public Criteria andIncomeGreaterThan(BigDecimal value) {
            addCriterion("income >", value, "income");
            return (Criteria) this;
        }

        public Criteria andIncomeGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("income >=", value, "income");
            return (Criteria) this;
        }

        public Criteria andIncomeLessThan(BigDecimal value) {
            addCriterion("income <", value, "income");
            return (Criteria) this;
        }

        public Criteria andIncomeLessThanOrEqualTo(BigDecimal value) {
            addCriterion("income <=", value, "income");
            return (Criteria) this;
        }

        public Criteria andIncomeIn(List<BigDecimal> values) {
            addCriterion("income in", values, "income");
            return (Criteria) this;
        }

        public Criteria andIncomeNotIn(List<BigDecimal> values) {
            addCriterion("income not in", values, "income");
            return (Criteria) this;
        }

        public Criteria andIncomeBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("income between", value1, value2, "income");
            return (Criteria) this;
        }

        public Criteria andIncomeNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("income not between", value1, value2, "income");
            return (Criteria) this;
        }

        public Criteria andFeesIsNull() {
            addCriterion("fees is null");
            return (Criteria) this;
        }

        public Criteria andFeesIsNotNull() {
            addCriterion("fees is not null");
            return (Criteria) this;
        }

        public Criteria andFeesEqualTo(BigDecimal value) {
            addCriterion("fees =", value, "fees");
            return (Criteria) this;
        }

        public Criteria andFeesNotEqualTo(BigDecimal value) {
            addCriterion("fees <>", value, "fees");
            return (Criteria) this;
        }

        public Criteria andFeesGreaterThan(BigDecimal value) {
            addCriterion("fees >", value, "fees");
            return (Criteria) this;
        }

        public Criteria andFeesGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("fees >=", value, "fees");
            return (Criteria) this;
        }

        public Criteria andFeesLessThan(BigDecimal value) {
            addCriterion("fees <", value, "fees");
            return (Criteria) this;
        }

        public Criteria andFeesLessThanOrEqualTo(BigDecimal value) {
            addCriterion("fees <=", value, "fees");
            return (Criteria) this;
        }

        public Criteria andFeesIn(List<BigDecimal> values) {
            addCriterion("fees in", values, "fees");
            return (Criteria) this;
        }

        public Criteria andFeesNotIn(List<BigDecimal> values) {
            addCriterion("fees not in", values, "fees");
            return (Criteria) this;
        }

        public Criteria andFeesBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("fees between", value1, value2, "fees");
            return (Criteria) this;
        }

        public Criteria andFeesNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("fees not between", value1, value2, "fees");
            return (Criteria) this;
        }

        public Criteria andRegisteredDateIsNull() {
            addCriterion("registered_date is null");
            return (Criteria) this;
        }

        public Criteria andRegisteredDateIsNotNull() {
            addCriterion("registered_date is not null");
            return (Criteria) this;
        }

        public Criteria andRegisteredDateEqualTo(LocalDateTime value) {
            addCriterion("registered_date =", value, "registeredDate");
            return (Criteria) this;
        }

        public Criteria andRegisteredDateNotEqualTo(LocalDateTime value) {
            addCriterion("registered_date <>", value, "registeredDate");
            return (Criteria) this;
        }

        public Criteria andRegisteredDateGreaterThan(LocalDateTime value) {
            addCriterion("registered_date >", value, "registeredDate");
            return (Criteria) this;
        }

        public Criteria andRegisteredDateGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("registered_date >=", value, "registeredDate");
            return (Criteria) this;
        }

        public Criteria andRegisteredDateLessThan(LocalDateTime value) {
            addCriterion("registered_date <", value, "registeredDate");
            return (Criteria) this;
        }

        public Criteria andRegisteredDateLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("registered_date <=", value, "registeredDate");
            return (Criteria) this;
        }

        public Criteria andRegisteredDateIn(List<LocalDateTime> values) {
            addCriterion("registered_date in", values, "registeredDate");
            return (Criteria) this;
        }

        public Criteria andRegisteredDateNotIn(List<LocalDateTime> values) {
            addCriterion("registered_date not in", values, "registeredDate");
            return (Criteria) this;
        }

        public Criteria andRegisteredDateBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("registered_date between", value1, value2, "registeredDate");
            return (Criteria) this;
        }

        public Criteria andRegisteredDateNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("registered_date not between", value1, value2, "registeredDate");
            return (Criteria) this;
        }

        public Criteria andIsDeletedIsNull() {
            addCriterion("is_deleted is null");
            return (Criteria) this;
        }

        public Criteria andIsDeletedIsNotNull() {
            addCriterion("is_deleted is not null");
            return (Criteria) this;
        }

        public Criteria andIsDeletedEqualTo(Boolean value) {
            addCriterion("is_deleted =", value, "isDeleted");
            return (Criteria) this;
        }

        public Criteria andIsDeletedNotEqualTo(Boolean value) {
            addCriterion("is_deleted <>", value, "isDeleted");
            return (Criteria) this;
        }

        public Criteria andIsDeletedGreaterThan(Boolean value) {
            addCriterion("is_deleted >", value, "isDeleted");
            return (Criteria) this;
        }

        public Criteria andIsDeletedGreaterThanOrEqualTo(Boolean value) {
            addCriterion("is_deleted >=", value, "isDeleted");
            return (Criteria) this;
        }

        public Criteria andIsDeletedLessThan(Boolean value) {
            addCriterion("is_deleted <", value, "isDeleted");
            return (Criteria) this;
        }

        public Criteria andIsDeletedLessThanOrEqualTo(Boolean value) {
            addCriterion("is_deleted <=", value, "isDeleted");
            return (Criteria) this;
        }

        public Criteria andIsDeletedIn(List<Boolean> values) {
            addCriterion("is_deleted in", values, "isDeleted");
            return (Criteria) this;
        }

        public Criteria andIsDeletedNotIn(List<Boolean> values) {
            addCriterion("is_deleted not in", values, "isDeleted");
            return (Criteria) this;
        }

        public Criteria andIsDeletedBetween(Boolean value1, Boolean value2) {
            addCriterion("is_deleted between", value1, value2, "isDeleted");
            return (Criteria) this;
        }

        public Criteria andIsDeletedNotBetween(Boolean value1, Boolean value2) {
            addCriterion("is_deleted not between", value1, value2, "isDeleted");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table aventador.view_infinite_income
     *
     * @mbg.generated do_not_delete_during_merge Wed Apr 13 14:25:10 KST 2022
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table aventador.view_infinite_income
     *
     * @mbg.generated Wed Apr 13 14:25:10 KST 2022
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}